<link rel="stylesheet" href="~/styles/about.css" asp-append-version="true" />

<div class="about-page">
    <!-- Background Image Container -->
    <div class="background-image-container">
        <div class="bg-overlay"></div>
        <div class="bg-image" id="default-bg" style="background-image: url('/images/background/default-bg.jpg');" data-bg-id="default"></div>
        <div class="bg-image" id="professional-bg" style="background-image: url('/images/background/professional-bg.jpg');" data-bg-id="professional"></div>
        <div class="bg-image" id="cultural-bg" style="background-image: url('/images/background/cultural-bg.jpg');" data-bg-id="cultural"></div>
        <div class="bg-image" id="ppi-xmum-secretary-bg" style="background-image: url('/images/background/secretary-bg.jpg');" data-bg-id="ppi-xmum-secretary"></div>
        <div class="bg-image" id="ppi-xmum-event-bg" style="background-image: url('/images/background/event-planner-bg.jpg');" data-bg-id="ppi-xmum-event"></div>
        <div class="bg-image" id="ppi-malaysia-bg" style="background-image: url('/images/background/backend-dev-bg.jpg');" data-bg-id="ppi-malaysia"></div>
        <div class="bg-image" id="gaming-bg" style="background-image: url('/images/background/gaming-bg.jpg');" data-bg-id="gaming"></div>
        <div class="bg-image" id="futsal-bg" style="background-image: url('/images/background/futsal-bg.jpg');" data-bg-id="futsal"></div>
    </div>

    <!-- Main Content Section with Unified Horizontal Scroll -->
    <section class="unified-section fade-on-scroll" id="unified-section">
        <div class="container">
            <div class="section-header">
                <h2 class="section-title">About Me</h2>
            </div>
            
            <div class="section-content">
                <div class="scroll-container" id="unified-scroll">
                    <!-- About Me Cards -->
                    <div class="section-group" id="about-group">
                        <div class="group-header">
                            <h3 class="group-title">Personal Background</h3>
                        </div>
                        <div class="cards-container">
                            <div class="info-card card" data-bg-image="professional">
                                <h3>Professional Background</h3>
                                <div class="card-content">
                                    <p>I'm a software engineering student from Indonesia, currently studying at Xiamen University
                                        Malaysia. My Surabayan roots have shaped my unique communication style, often mixing Indonesian
                                        with Javanese and featuring that distinct "medok" tone.</p>
                                    <p>I'm passionate about backend development and data management, with a focus on creating efficient
                                        and scalable systems.</p>
                                </div>
                            </div>
                            <div class="info-card card" data-bg-image="cultural">
                                <h3>Cultural Background</h3>
                                <div class="card-content">
                                    <p>Being from Surabaya, Indonesia, I bring a unique cultural perspective to my work and
                                        interactions. The "medok" accent from my hometown adds character to my communication style, and
                                        I embrace the blend of languages that forms my identity.</p>
                                    <p>This multicultural experience helps me approach problems from different angles and collaborate
                                        effectively in diverse environments.</p>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Organizations Cards -->
                    <div class="section-group" id="org-group">
                        <div class="group-header">
                            <h3 class="group-title">Organizational Experience</h3>
                        </div>
                        <div class="cards-container">
                            <div class="org-card card" data-bg-image="ppi-xmum-secretary">
                                <h3>PPI XMUM</h3>
                                <div class="card-content">
                                    <p class="role">Head of Secretary (Current)</p>
                                    <p>Currently serving as the Secretary for the Indonesian Students Association at Xiamen University
                                        Malaysia, managing administrative operations and ensuring smooth communication between members
                                        and leadership.</p>
                                </div>
                            </div>
                            <div class="org-card card" data-bg-image="ppi-xmum-event">
                                <h3>PPI XMUM</h3>
                                <div class="card-content">
                                    <p class="role">Head of Event Planner (Past)</p>
                                    <p>Previously coordinated and executed various cultural and academic events for the Indonesian
                                        student community, developing strong project management and leadership skills.</p>
                                </div>
                            </div>
                            <div class="org-card card" data-bg-image="ppi-malaysia">
                                <h3>PPI Malaysia</h3>
                                <div class="card-content">
                                    <p class="role">Head of Backend Development</p>
                                    <p>Leading backend development initiatives for the Central Bureau of Data and Information at PPI
                                        Malaysia, creating robust systems to manage and analyze student data across Malaysia.</p>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Hobbies Cards -->
                    <div class="section-group" id="hobbies-group">
                        <div class="group-header">
                            <h3 class="group-title">My Hobbies</h3>
                            <p class="group-subtitle">I'm very competitive and hot-blooded in my system! ðŸ¤£</p>
                        </div>
                        <div class="cards-container">
                            <div class="hobby-card card" data-bg-image="gaming">
                                <h3>Competitive Gaming</h3>
                                <div class="card-content">
                                    <p>Playing games at a high level is my passion. I'm particularly active in:</p>
                                    <ul>
                                        <li>Mobile Legends - Competitive player</li>
                                        <li>Valorant - High-level tactical gameplay</li>
                                    </ul>
                                    <p>Gaming helps me develop strategic thinking and quick decision-making skills that transfer to my
                                        professional work.</p>
                                </div>
                            </div>
                            <div class="hobby-card card" data-bg-image="futsal">
                                <h3>Futsal</h3>
                                <div class="card-content">
                                    <p>I love playing futsal as a goalkeeper. The thrill of making crucial saves and the pressure of
                                        being the last line of defense feeds my competitive spirit.</p>
                                    <p>This role has taught me to stay focused under pressure and take calculated risks - skills that
                                        benefit me as a developer too.</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="scroll-arrows">
                    <div class="scroll-arrow scroll-left" onclick="scrollCards('unified-scroll', 'left')">&#8249;</div>
                    <div class="scroll-arrow scroll-right" onclick="scrollCards('unified-scroll', 'right')">&#8250;</div>
                </div>
            </div>
        </div>
    </section>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Set default background
        document.getElementById('default-bg').classList.add('active');
        
        // Get all cards with data-bg-image attribute
        const cards = document.querySelectorAll('.card[data-bg-image]');
        
        // Add event listeners to each card
        cards.forEach(card => {
            const bgImageId = card.getAttribute('data-bg-image');
            
            card.addEventListener('mouseenter', function() {
                // Remove active class from all cards
                document.querySelectorAll('.card').forEach(c => {
                    c.classList.remove('active');
                });
                
                // Add active class to current card
                card.classList.add('active');
                
                // Hide all backgrounds
                document.querySelectorAll('.bg-image').forEach(bg => {
                    bg.classList.remove('active');
                });
                
                // Show the background for this card
                const bgElement = document.getElementById(bgImageId + '-bg');
                if (bgElement) {
                    bgElement.classList.add('active');
                }
            });
            
            card.addEventListener('mouseleave', function() {
                // When mouse leaves, check if any other card is being hovered
                const hoveredCard = document.querySelector('.card:hover[data-bg-image]');
                
                if (!hoveredCard) {
                    // If no other card is hovered, return to default background
                    document.querySelectorAll('.bg-image').forEach(bg => {
                        bg.classList.remove('active');
                    });
                    document.getElementById('default-bg').classList.add('active');
                    
                    // Remove active class from this card
                    card.classList.remove('active');
                }
            });
        });
        
        // Initialize section indicator functionality
        initSectionIndicators();
        
        // Initial visibility check for fade elements
        checkVisibility();
    });
    
    // Initialize section indicators
    function initSectionIndicators() {
        const scrollContainer = document.getElementById('unified-scroll');
        const indicators = document.querySelectorAll('.section-indicators .indicator');
        const sections = document.querySelectorAll('.section-group');
        
        // Add click event to indicators
        indicators.forEach(indicator => {
            indicator.addEventListener('click', function() {
                const targetSection = document.getElementById(this.getAttribute('data-section'));
                if (targetSection) {
                    scrollContainer.scrollTo({
                        left: targetSection.offsetLeft - 20,
                        behavior: 'smooth'
                    });
                }
            });
        });
        
        // Update indicators based on scroll position
        scrollContainer.addEventListener('scroll', function() {
            const scrollLeft = this.scrollLeft;
            const containerWidth = this.clientWidth;
            
            sections.forEach((section, index) => {
                const sectionLeft = section.offsetLeft - this.offsetLeft;
                const sectionRight = sectionLeft + section.clientWidth;
                
                // Section is in view
                if ((sectionLeft <= containerWidth / 2 && sectionRight >= containerWidth / 2) ||
                    (index === 0 && scrollLeft === 0) ||
                    (index === sections.length - 1 && scrollLeft + containerWidth >= this.scrollWidth - 10)) {
                    
                    // Update indicators
                    indicators.forEach(ind => ind.classList.remove('active'));
                    indicators[index].classList.add('active');
                }
            });
        });
    }
    
    // Improved scroll behavior function
    function scrollCards(containerId, direction) {
        const container = document.getElementById(containerId);
        const scrollAmount = container.clientWidth * 0.75; // Scroll by 75% of container width
        
        if (direction === 'left') {
            container.scrollBy({
                left: -scrollAmount,
                behavior: 'smooth'
            });
        } else {
            container.scrollBy({
                left: scrollAmount,
                behavior: 'smooth'
            });
        }
    }
    
    // Enhanced fade on scroll effect
    function checkVisibility() {
        const fadeElements = document.querySelectorAll('.fade-on-scroll');
        const viewportHeight = window.innerHeight;
        
        fadeElements.forEach(el => {
            const rect = el.getBoundingClientRect();
            const elementTop = rect.top;
            const elementBottom = rect.bottom;
            
            // Element is partially visible
            if (elementTop < viewportHeight && elementBottom > 0) {
                el.style.opacity = 1;
                el.style.transform = 'translateY(0)';
            } else {
                el.style.opacity = 0;
                el.style.transform = 'translateY(30px)';
            }
        });
    }
    
    // Improved scroll event handler with throttling
    let isScrolling;
    window.addEventListener('scroll', function() {
        // Clear our timeout throughout the scroll
        window.clearTimeout(isScrolling);
        
        // Set a timeout to run after scrolling ends
        isScrolling = setTimeout(function() {
            checkVisibility();
        }, 60);
    });
    
    // Also check on resize
    window.addEventListener('resize', checkVisibility);
    
    // Initial check
    checkVisibility();
</script>